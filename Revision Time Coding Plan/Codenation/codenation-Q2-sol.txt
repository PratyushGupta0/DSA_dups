IMP links
https://codeforces.com/blog/entry/8767
https://www.geeksforgeeks.org/longest-monotonically-increasing-subsequence-size-n-log-n/

#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long int
#define pb push_back
typedef pair<ll,ll> ipair;
#define F first
#define S second
 

int CeilIndex(std::vector<int>& v, int l, int r, int key) 
{ 
    while (r - l > 1) { 
        int m = l + (r - l) / 2; 
        if (v[m] >= key) 
            r = m; 
        else
            l = m; 
    } 
  
    return r; 
} 
  
int LongestIncreasingSubsequenceLength(std::vector<int>& v) 
{ 
    if (v.size() == 0) 
        return 0; 
  
    std::vector<int> tail(v.size(), 0); 
    int length = 1; 
  
    tail[0] = v[0]; 
    for (size_t i = 1; i < v.size(); i++) { 
  
        
        if (v[i] < tail[0]) 
            tail[0] = v[i]; 
  
        
        else if (v[i] > tail[length - 1]) 
            tail[length++] = v[i]; 
  
        
        else
            tail[CeilIndex(tail, -1, length - 1, v[i])] = v[i]; 
    } 
  
    return length; 
} 
int func(vector<int> a , vector<int> b)
{
    map<int,vector<int> > mp;
    for(int i=a.size()-1;i>=0;i--)
    {
        mp[a[i]].pb(i);
    }
    vector<int> lis;
    for(int i=0;i<b.size();i++)
    {
        lis.insert(lis.end(), mp[b[i]].begin(), mp[b[i]].end());
    }
    return b.size()-LongestIncreasingSubsequenceLength(lis);
    
}

int main() {
	ios_base::sync_with_stdio(false);
    std::cin.tie(NULL);
    std::cout.tie(NULL);
    
    
	ll n,i,j,p,k,m,ans=0;
    cin>>n>>m;
    vector<int> a(n),b(m);
    for(i=0;i<n;i++)
    {
        cin>>a[i];
    }
    for(i=0;i<m;i++)
    {
        cin>>b[i];
    }
    cout<<func(a,b)<<endl;
    
	return 0;
}